// –ì—É–ª—å–Ω—è –í–∞–¥–∂—ã–¶—ã—Ñ—Ä—ã - –±–µ–ª–∞—Ä—É—Å–∫—ñ JavaScript
document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const guessInput = document.getElementById('guess-input');
    const submitBtn = document.getElementById('submit-btn');
    const restartBtn = document.getElementById('restart-btn');
    const resultMessage = document.getElementById('result-message');
    const hintMessage = document.getElementById('hint-message');
    const attemptsLeft = document.getElementById('attempts-left');
    const previousGuesses = document.getElementById('previous-guesses');
    const gameOverSection = document.getElementById('game-over');
    const gameOverTitle = document.getElementById('game-over-title');
    const gameOverMessage = document.getElementById('game-over-message');

    // –ó–º–µ–Ω–Ω—ã—è –≥—É–ª—å–Ω—ñ
    let randomNumber = Math.floor(Math.random() * 100) + 1;
    let guessCount = 1;
    let maxGuesses = 10;
    let userGuesses = [];

    // –ü–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω—ñ –ø–∞-–±–µ–ª–∞—Ä—É—Å–∫—É
    const messages = {
        start: "–ü–∞—á–Ω—ñ—Ü–µ –≥—É–ª—å–Ω—é! –£–≤—è–¥–∑—ñ—Ü–µ –≤–∞—à—É –ø–µ—Ä—à—É—é –∑–¥–∞–≥–∞–¥–∫—É.",
        tooHigh: "–ó–∞–Ω–∞–¥—Ç–∞ –≤—ã—Å–æ–∫–∞! –ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ —è—à—á—ç —Ä–∞–∑.",
        tooLow: "–ó–∞–Ω–∞–¥—Ç–∞ –Ω—ñ–∑–∫–∞! –ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ —è—à—á—ç —Ä–∞–∑.",
        correct: "üéâ –í—ñ–Ω—à—É–µ–º! –í—ã –∞–¥–≥–∞–¥–∞–ª—ñ –ª—ñ—á–±—É!",
        invalid: "–ö–∞–ª—ñ –ª–∞—Å–∫–∞, —É–≤—è–¥–∑—ñ—Ü–µ –ª—ñ—á–±—É –∞–¥ 1 –¥–∞ 100!",
        gameOver: "üòî –ù–∞ –∂–∞–ª—å, –≤—ã –Ω–µ –∞–¥–≥–∞–¥–∞–ª—ñ!",
        attempts: "—Å–ø—Ä–æ–±",
        previousGuesses: "–ü–∞–ø—è—Ä—ç–¥–Ω—ñ—è –∑–¥–∞–≥–∞–¥–∫—ñ",
        newGame: "üîÑ –ü–∞—á–∞—Ü—å –Ω–æ–≤—É—é –≥—É–ª—å–Ω—é"
    };

    // –Ü–Ω—ñ—Ü—ã—è–ª—ñ–∑–∞—Ü—ã—è
    function initGame() {
        guessInput.focus();
        updateAttemptsDisplay();
    }

    // –ê–±–Ω–∞–≤—ñ—Ü—å –∞–¥–ª—é—Å—Ç—Ä–∞–≤–∞–Ω–Ω–µ —Å–ø—Ä–æ–±–∞—û
    function updateAttemptsDisplay() {
        attemptsLeft.textContent = maxGuesses - guessCount + 1;
    }

    // –ü—Ä–∞–≤–µ—Ä—ã—Ü—å –∑–¥–∞–≥–∞–¥–∫—É
    function checkGuess() {
        const userGuess = parseInt(guessInput.value);

        // –í–∞–ª—ñ–¥–∞—Ü—ã—è
        if (isNaN(userGuess) || userGuess < 1 || userGuess > 100) {
            showMessage(messages.invalid, 'error');
            guessInput.classList.add('shake');
            setTimeout(() => guessInput.classList.remove('shake'), 500);
            return;
        }

        // –î–∞–¥–∞—Ü—å –∑–¥–∞–≥–∞–¥–∫—É —û —Å–ø—ñ—Å
        userGuesses.push(userGuess);
        updatePreviousGuesses();

        // –ü—Ä–∞–≤–µ—Ä—ã—Ü—å –∑–¥–∞–≥–∞–¥–∫—É
        if (userGuess === randomNumber) {
            // –ü–µ—Ä–∞–º–æ–≥–∞!
            showMessage(messages.correct, 'success');
            showHint(`–í—ã –∞–¥–≥–∞–¥–∞–ª—ñ –∑–∞ ${guessCount} ${messages.attempts}!`);
            gameOver(true);
        } else if (guessCount === maxGuesses) {
            // –ü–∞—Ä–∞–∑–∞
            showMessage(messages.gameOver, 'error');
            showHint(`–ü—Ä–∞–≤—ñ–ª—å–Ω–∞—è –ª—ñ—á–±–∞ –±—ã–ª–∞: ${randomNumber}`);
            gameOver(false);
        } else {
            // –ü—Ä–∞—Ü—è–≥ –≥—É–ª—å–Ω—ñ
            if (userGuess < randomNumber) {
                showMessage(messages.tooLow, 'warning');
                showHint("–ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ –±–æ–ª—å—à—É—é –ª—ñ—á–±—É");
            } else {
                showMessage(messages.tooHigh, 'warning');
                showHint("–ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ –º–µ–Ω—à—É—é –ª—ñ—á–±—É");
            }
            
            guessCount++;
            updateAttemptsDisplay();
            guessInput.value = '';
            guessInput.focus();
        }
    }

    // –ü–∞–∫–∞–∑–∞—Ü—å –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ
    function showMessage(message, type) {
        resultMessage.textContent = message;
        resultMessage.className = `result-message ${type}`;
        
        // –î–∞–¥–∞—Ü—å –∞–Ω—ñ–º–∞—Ü—ã—é
        resultMessage.classList.add('bounce');
        setTimeout(() => resultMessage.classList.remove('bounce'), 600);
    }

    // –ü–∞–∫–∞–∑–∞—Ü—å –ø–∞–¥–∫–∞–∑–∫—É
    function showHint(hint) {
        hintMessage.textContent = hint;
    }

    // –ê–±–Ω–∞–≤—ñ—Ü—å –ø–∞–ø—è—Ä—ç–¥–Ω—ñ—è –∑–¥–∞–≥–∞–¥–∫—ñ
    function updatePreviousGuesses() {
        if (userGuesses.length > 0) {
            previousGuesses.textContent = userGuesses.join(', ');
        }
    }

    // –ö–∞–Ω–µ—Ü –≥—É–ª—å–Ω—ñ
    function gameOver(won) {
        guessInput.disabled = true;
        submitBtn.disabled = true;
        
        if (won) {
            gameOverTitle.textContent = "üéâ –ü–µ—Ä–∞–º–æ–≥–∞!";
            gameOverMessage.textContent = `–í—ã –≤—ã–¥–∞—Ç–Ω–∞ —Å–ø—Ä–∞–≤—ñ–ª—ñ—Å—è! –õ—ñ—á–±–∞ ${randomNumber} –±—ã–ª–∞ –∞–¥–≥–∞–¥–∞–Ω–∞ –∑–∞ ${guessCount} —Å–ø—Ä–æ–±.`;
            gameOverSection.style.background = "linear-gradient(135deg, #10b981, #059669)";
        } else {
            gameOverTitle.textContent = "üòî –ì—É–ª—å–Ω—è —Å–∫–æ–Ω—á–∞–Ω–∞";
            gameOverMessage.textContent = `–ù–∞ –∂–∞–ª—å, –≤—ã –Ω–µ –∞–¥–≥–∞–¥–∞–ª—ñ. –ü—Ä–∞–≤—ñ–ª—å–Ω—ã –∞–¥–∫–∞–∑: ${randomNumber}`;
            gameOverSection.style.background = "linear-gradient(135deg, #ef4444, #dc2626)";
        }
        
        gameOverSection.classList.remove('hidden');
        gameOverSection.classList.add('bounce');
    }

    // –ü–µ—Ä–∞–∑–∞–ø—É—Å—Ü—ñ—Ü—å –≥—É–ª—å–Ω—é
    function restartGame() {
        // –°–∫—ñ–¥ —É—Å—ñ—Ö –∑–º–µ–Ω–Ω—ã—Ö
        randomNumber = Math.floor(Math.random() * 100) + 1;
        guessCount = 1;
        userGuesses = [];
        
        // –ê—á—ã—Å—Ç–∫–∞ —ñ–Ω—Ç—ç—Ä—Ñ–µ–π—Å—É
        guessInput.value = '';
        guessInput.disabled = false;
        submitBtn.disabled = false;
        
        // –ê—á—ã—Å—Ç–∫–∞ –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω—è—û
        showMessage(messages.start, 'normal');
        showHint('');
        
        // –°–∫—ñ–¥ –∞–¥–ª—é—Å—Ç—Ä–∞–≤–∞–Ω–Ω—è
        updateAttemptsDisplay();
        previousGuesses.textContent = '-';
        
        // –°—Ö–∞–≤–∞—Ü—å –±–ª–æ–∫ –∫–∞–Ω—Ü–∞ –≥—É–ª—å–Ω—ñ
        gameOverSection.classList.add('hidden');
        
        // –§–æ–∫—É—Å –Ω–∞ —û–≤–æ–¥
        guessInput.focus();
    }

    // –ü–∞–¥–∑–µ—ñ
    submitBtn.addEventListener('click', checkGuess);
    restartBtn.addEventListener('click', restartGame);
    
    // –ü–∞–¥—Ç—Ä—ã–º–∫–∞ Enter
    guessInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !guessInput.disabled) {
            checkGuess();
        }
    });

    // –Ü–Ω—ñ—Ü—ã—è–ª—ñ–∑–∞—Ü—ã—è
    initGame();
});
